#!/usr/bin/env coffee

> @3-/ymlid
  @3-/write
  fs > readdirSync existsSync
  path > join dirname

gen = (dir, yml)=>
  dict = ymlid(
    join dir, yml
    join dir, '.id.yml'
  )
  rs = [
    '''// DON\'T EDIT , GENERATED BY hpcmod

#[macro_export]
macro_rules! err {
  () => {
    ih::err_code_li!(crate);
  };
}'''
  ]

  for [mod, val_id] from Object.entries dict
    rs.push "\npub mod #{mod} {"
    for [val, id] from Object.entries val_id
      rs.push "  pub const #{val.toUpperCase()}: u32 = #{id};"
    rs.push '}'

  write(
    join(dirname(dir),'src/err.rs')
    rs.join('\n')
  )
  return

export default (dir)=>
  dir_li = readdirSync(dir)
  for i in dir_li
    err_dir = join dir, i, 'err'
    if not existsSync err_dir
      continue
    for i from readdirSync err_dir
      if i.endsWith('.yml') and not i.startsWith('.')
        gen(err_dir, i)
        break
  return


